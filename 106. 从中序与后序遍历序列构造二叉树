106. 从中序与后序遍历序列构造二叉树

你可以假设树中没有重复的元素。

例如，给出

中序遍历 inorder = [9,3,15,20,7]
后序遍历 postorder = [9,15,7,20,3]
返回如下的二叉树：

    3
   / \
  9  20
    /  \
   15   7

class Solution {
    Map<Integer, Integer> map = new HashMap<>();
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        if(inorder == null || inorder.length == 0 || postorder == null || postorder.length == 0)
            return null;
        for(int i = 0; i < inorder.length; i++)
            map.put(inorder[i], i);
        return build(postorder, postorder.length - 1, 0, inorder.length - 1);
    }

    private TreeNode build(int[] postorder, int post_root, int in_left, int in_right){
        if(in_left > in_right)
            return null;
        TreeNode root = new TreeNode(postorder[post_root]);
        int in_root = map.get(postorder[post_root]);
        root.left = build(postorder, post_root - (in_right - in_root) - 1, in_left, in_root - 1);
        root.right = build(postorder, post_root - 1, in_root + 1, in_right);  
        return root;  
    }
}