1644. Lowest Common Ancestor of a Binary Tree II

给一棵二叉树和二叉树中的两个节点，找到这两个节点的最近公共祖先LCA。

两个节点的最近公共祖先，是指两个节点的所有父亲节点中（包括这两个节点），离这两个节点最近的公共的节点。

返回 null 如果两个节点在这棵树上不存在最近公共祖先的话。

这两个节点未必都在这棵树上出现。
每个节点的值都不同

public class Solution {
    /*
     * @param root: The root of the binary tree.
     * @param A: A TreeNode
     * @param B: A TreeNode
     * @return: Return the LCA of the two nodes.
     */
    int count = 0;
    public TreeNode lowestCommonAncestor3(TreeNode root, TreeNode A, TreeNode B) {
        TreeNode res = LCA(root, A, B);
        return count == 2 ? res : null;
    }

    private TreeNode LCA(TreeNode root, TreeNode A, TreeNode B){
        if(root == null)
            return null;
        TreeNode left = LCA(root.left, A, B);
        TreeNode right = LCA(root.right, A, B);
        if(root == A || root == B){
            count++;
            return root;
        }
        if(left != null && right != null)
            return root;
        return left == null ? right : left;
    }
}