105. 从前序与中序遍历序列构造二叉树
根据一棵树的前序遍历与中序遍历构造二叉树。

注意:
你可以假设树中没有重复的元素。

例如，给出

前序遍历 preorder = [3,9,20,15,7]
中序遍历 inorder = [9,3,15,20,7]
返回如下的二叉树：

    3
   / \
  9  20
    /  \
   15   7

class Solution {
    Map<Integer, Integer> map = new HashMap<>();
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder == null || preorder.length == 0 || inorder == null || inorder.length == 0)
            return null;
        for(int i = 0; i < inorder.length; i++)
            map.put(inorder[i], i);
        return build(preorder, 0, 0, inorder.length - 1);
    }

    private TreeNode build(int[] preorder, int pre_root, int in_left, int in_right){
        if(in_left > in_right)
            return null;
        TreeNode root = new TreeNode(preorder[pre_root]);
        int in_root = map.get(preorder[pre_root]);
        root.left = build(preorder, pre_root + 1, in_left, in_root - 1);
        root.right = build(preorder, pre_root + in_root - in_left + 1, in_root + 1, in_right);
        return root;
    }
}